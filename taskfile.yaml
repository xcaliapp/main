version: "3"

vars:
  WORKSPACE_DIR: "${HOME}/workspace/xcaliapp"
  GO_MODULES:
    sh: dir -1 ../ | while read d; do test -f ../$d/go.mod && echo $d; done
  GIT_REPOS:
    sh: dir -1 ../ | while read d; do test -d ../$d/.git && echo $d; done
  WEBAPP_VERSION: ""

  DRAWINGS_BUCKET_NAME: '{{ .DRAWINGS_BUCKET_NAME | default "test-xcalidrawings" }}'

includes:
  server:
    taskfile: ../server/taskfile.yaml
    dir: ../server
  webclient:
    taskfile: ../webclient/taskfile.yaml
    dir: ../webclient
  aws-lambda:
    taskfile: ../lambda/taskfile.yaml
    dir: ../lambda

tasks:
  setup:
    cmds:
      - |
        mkdir -p "{{.WORKSPACE_DIR}}"
        cd "{{.WORKSPACE_DIR}}"
        go work init
        cd -
        echo '{{.GIT_REPOS}}' | while read mod; do
          cd "{{.WORKSPACE_DIR}}"
            git clone git@github.com:xcaliapp/$mod.git
            test -f $mod/go.mod && go work use $mod
          cd -
        done
        cd "{{.WORKSPACE_DIR}}"

        # dependencies from outside the github org:
        git clone git@github.com:pdkovacs/vcblobstore.git
        go work use vcblobstore
  git-all:
    cmds:
      - |
        cd "{{.WORKSPACE_DIR}}/main"
        while read mod; do
        echo "mod: $mod"
          cd ../$mod
          lazygit
          cd -
        done < <(echo '{{.GIT_REPOS}}')
  debug:
    cmds:
      - |
        echo "Top: DRAWINGS_BUCKET_NAME="{{.DRAWINGS_BUCKET_NAME}}
  release-webapp:
    cmds:
      - |
        if [ -z "{{.WEBAPP_VERSION}}" ];
        then
          echo "The task variable WEBAPP_VERSION must be set"
          exit 1
        fi
      - task: webclient:build
      - |
        oses="linux windows darwin"
        arches="amd64 arm64"
        for os in $oses;
        do
          for arch in $arches;
          do
            export GOOS=$os
            export GOARCH=$arch
            echo "GOOS: ${GOOS} GOARCH: ${GOARCH}"
            task server:with-webclient
          done;
        done;
        cd ..
          for d in $(find . -maxdepth 1 -type d);
          do
            [ "$d" == "." ] && continue;
            echo $d;
            cd $d
            git tag -a -f "xcaliapp-{{.WEBAPP_VERSION}}"
            git push -f --tags
            cd -
          done
